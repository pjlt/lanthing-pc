name: Package
on: workflow_dispatch
jobs:
  Windows:
    permissions:
      contents: write
    runs-on: windows-2022
    steps:
      - name: Checkout
        with:
          submodules: true
        uses: actions/checkout@v4
      - name: Init MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: '6.5.3'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
      - name: Fetch prebuilt
        run: ./build.ps1 prebuilt fetch
      - name: Build lanthing-pc
        run: ./build.ps1 build Release
      - name: Generate Zip
        run: |
          echo ${{ github.sha }} > Release.txt
          $OP = "${{ github.workspace }}/install/RelWithDebInfo/bin"
          $PDB = "${{ github.workspace }}/install/RelWithDebInfo/pdb"
          Compress-Archive -Path Release.txt,LICENSE,third-party-licenses.txt,$OP/platforms,$OP/styles,$OP/abseil_dll.dll,$OP/app.exe,$OP/avcodec-59.dll,$OP/avutil-57.dll,$OP/breakpad.dll,$OP/g3log.dll,$OP/lanthing.exe,$OP/libprotobuf-lite.dll,$OP/libvpl.dll,$OP/ltlib.dll,$OP/Qt6Core.dll,$OP/Qt6Gui.dll,$OP/Qt6Widgets.dll,$OP/rtc.dll,$OP/rtc2.dll,$OP/sdl2.dll,$OP/sqlite3.dll,$OP/uv.dll -DestinationPath lanthing.win.${{ github.ref_name }}.zip
          Compress-Archive -Path Release.txt,$PDB -DestinationPath pdb.${{ github.ref_name }}.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            lanthing.win.${{ github.ref_name }}.zip
            pdb.${{ github.ref_name }}.zip
  Linux:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        with:
          submodules: true
        uses: actions/checkout@v4
      - name: Install deps
        run: |
          sudo apt-get clean
          sudo apt-get update
          sudo apt-get -y install gcc-10 g++-10 pkg-config libglib2.0-dev libx11-dev libdrm-dev libva-dev libva-drm2 libgl-dev libgles-dev libgles1 libgles2 libegl-dev libmfx-dev libvdpau-dev libxcb1-dev libxcb-cursor0 libx11-xcb1
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: '6.5.3'
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
      - name: Fetch prebuilt
        run: bash build.sh prebuilt fetch
      - name: Build lanthing-pc
        run: |
          alias gcc='gcc-10'
          alias g++='g++-10'
          export CC=`which gcc-10`
          export CXX=`which g++-10`
          bash build.sh build Release
      - name: Set version
        run: |
          VERSION=${{ github.ref_name }}
          VERSION=${VERSION/v/beta}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Set VERSION to $VERSION"
      - name: Make AppImage
        run: |
          bash build.sh package Release
          cp lanthing-${{ env.VERSION }}-x86_64.AppImage lanthing.linux-${{ env.VERSION }}-x86_64.AppImage
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            lanthing.linux-${{ env.VERSION }}-x86_64.AppImage
